/**
 * Default variables.
 */
$blackColor: #222 !default;
$whiteColor: #eee !default;

$red-magic-number: 241;
$green-magic-number: 691;
$blue-magic-number: 68;
$brightness-divisor: $red-magic-number + $green-magic-number + $blue-magic-number;

/**
 * Polarize
 *
 * Calculates the perceived brightness rather than lightness.
 *
 * Based on the work from:
 * http://www.nbdtech.com/Blog/archive/2008/04/27/Calculating-the-Perceived-Brightness-of-a-Color.aspx
 */

@function brightness($color) {
	// Extract color components
	$red-component: red($color);
	$green-component: green($color);
	$blue-component: blue($color);

	// Calculate a brightness value in 3d color space between 0 and 255
	$number: sqrt((($red-component * $red-component * $red-magic-number) + ($green-component * $green-component * $green-magic-number) + ($blue-component * 	$blue-component * $blue-magic-number)) / $brightness-divisor);

	// Convert to percentage and return
	@return 100% * $number / 255;
}

@function contrast($color, $w: $whiteColor, $b: $blackColor) {
	@if brightness($color) < 65% {
		@return $w;
	}
	@else {
		@return $b;
	}
}